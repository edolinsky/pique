package services.content;

import services.dataAccess.AbstractDataAccess;
import services.dataAccess.proto.PostProto;
import services.dataAccess.proto.PostProto.Post;
import services.sources.AbstractRestfulSource;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Collections;
import java.util.List;

import static services.PublicConstants.HTTP_GET;

/**
 * This class is capable of making RESTful API calls to collect data, given an
 * {@link AbstractRestfulSource} to collect from and an {@link AbstractDataAccess} to place the
 * results
 *
 * @author Reid Oliveira, Sammie Jiang
 */
public class RestfulDataCollector extends AbstractDataCollector {

	AbstractRestfulSource source;

	public RestfulDataCollector(AbstractDataAccess dataAccess, AbstractRestfulSource source) {
		super(dataAccess);
		this.source = source;
	}

	@Override
	public AbstractRestfulSource getSource() {
		return source;
	}

	@Override
	public List<Post> fetch() {
		/**
		 * All RestfulDataCollectors operate similarly and that behaviour is specified here.
		 * The exact request (url and endpoint) is generated by the source class, and likely
		 * interpreted by it as well
		 */

		// source: http://stackoverflow.com/questions/1359689/how-to-send-http-request-in-java

		HttpURLConnection connection = null; // these are one time use connections

		try {
			URL url = new URL(source.getUrl());
			connection = (HttpURLConnection) url.openConnection();
			connection.setRequestMethod(HTTP_GET);

			//Send request
			DataOutputStream wr = new DataOutputStream (
					connection.getOutputStream());
			// TODO wr.writeBytes(source.generateRequest);
			wr.close();

			//Get Response
			InputStream is = connection.getInputStream();
			BufferedReader rd = new BufferedReader(new InputStreamReader(is));
			StringBuilder response = new StringBuilder(); // or StringBuffer if Java version 5+
			String line;
			while ((line = rd.readLine()) != null) {
				response.append(line);
				response.append('\r');
			}
			rd.close();


			//TODO create Post object from response object
			return Collections.emptyList();

		} catch(IOException e) {
			// if we fail this we shouldn't fall over, just reschedule an attempt

			// TODO notify of failure and fail gracefully
		} finally {
			if (connection != null) {
				connection.disconnect();
			}
		}

		return null;
	}
}
