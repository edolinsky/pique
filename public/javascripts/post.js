/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.services.dataAccess.proto.Post');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.dataAccess.proto.Post = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.dataAccess.proto.Post.repeatedFields_, null);
};
goog.inherits(proto.services.dataAccess.proto.Post, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.services.dataAccess.proto.Post.displayName = 'proto.services.dataAccess.proto.Post';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.dataAccess.proto.Post.repeatedFields_ = [3,4,10,11,12,13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.dataAccess.proto.Post.prototype.toObject = function(opt_includeInstance) {
  return proto.services.dataAccess.proto.Post.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.dataAccess.proto.Post} msg The msg instance to transform.
 * @return {!Object}
 */
proto.services.dataAccess.proto.Post.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sourceList: jspb.Message.getField(msg, 3),
    sourceLinkList: jspb.Message.getField(msg, 4),
    popularityScore: jspb.Message.getFieldWithDefault(msg, 5, 0),
    popularityVelocity: jspb.Message.getFieldWithDefault(msg, 6, 0),
    numComments: jspb.Message.getFieldWithDefault(msg, 7, 0),
    numShares: jspb.Message.getFieldWithDefault(msg, 8, 0),
    numLikes: jspb.Message.getFieldWithDefault(msg, 9, 0),
    hashtagList: jspb.Message.getField(msg, 10),
    textList: jspb.Message.getField(msg, 11),
    imgLinkList: jspb.Message.getField(msg, 12),
    extLinkList: jspb.Message.getField(msg, 13)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.dataAccess.proto.Post}
 */
proto.services.dataAccess.proto.Post.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.dataAccess.proto.Post;
  return proto.services.dataAccess.proto.Post.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.dataAccess.proto.Post} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.dataAccess.proto.Post}
 */
proto.services.dataAccess.proto.Post.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addSource(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addSourceLink(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPopularityScore(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPopularityVelocity(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumComments(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumShares(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumLikes(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addHashtag(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addText(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addImgLink(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.addExtLink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.services.dataAccess.proto.Post} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.services.dataAccess.proto.Post.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.dataAccess.proto.Post.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.services.dataAccess.proto.Post.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getSourceList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = this.getSourceLinkList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = this.getPopularityScore();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = this.getPopularityVelocity();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = this.getNumComments();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = this.getNumShares();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = this.getNumLikes();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = this.getHashtagList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = this.getTextList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = this.getImgLinkList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
  f = this.getExtLinkList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      13,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.services.dataAccess.proto.Post.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.services.dataAccess.proto.Post.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string timestamp = 2;
 * @return {string}
 */
proto.services.dataAccess.proto.Post.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.services.dataAccess.proto.Post.prototype.setTimestamp = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated string source = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.services.dataAccess.proto.Post.prototype.getSourceList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 3));
};


/** @param {!Array.<string>} value */
proto.services.dataAccess.proto.Post.prototype.setSourceList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.services.dataAccess.proto.Post.prototype.addSource = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.services.dataAccess.proto.Post.prototype.clearSourceList = function() {
  this.setSourceList([]);
};


/**
 * repeated string source_link = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.services.dataAccess.proto.Post.prototype.getSourceLinkList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 4));
};


/** @param {!Array.<string>} value */
proto.services.dataAccess.proto.Post.prototype.setSourceLinkList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.services.dataAccess.proto.Post.prototype.addSourceLink = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.services.dataAccess.proto.Post.prototype.clearSourceLinkList = function() {
  this.setSourceLinkList([]);
};


/**
 * optional int32 popularity_score = 5;
 * @return {number}
 */
proto.services.dataAccess.proto.Post.prototype.getPopularityScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.services.dataAccess.proto.Post.prototype.setPopularityScore = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional int32 popularity_velocity = 6;
 * @return {number}
 */
proto.services.dataAccess.proto.Post.prototype.getPopularityVelocity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.services.dataAccess.proto.Post.prototype.setPopularityVelocity = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional int32 num_comments = 7;
 * @return {number}
 */
proto.services.dataAccess.proto.Post.prototype.getNumComments = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.services.dataAccess.proto.Post.prototype.setNumComments = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional int32 num_shares = 8;
 * @return {number}
 */
proto.services.dataAccess.proto.Post.prototype.getNumShares = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.services.dataAccess.proto.Post.prototype.setNumShares = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional int32 num_likes = 9;
 * @return {number}
 */
proto.services.dataAccess.proto.Post.prototype.getNumLikes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.services.dataAccess.proto.Post.prototype.setNumLikes = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * repeated string hashtag = 10;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.services.dataAccess.proto.Post.prototype.getHashtagList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 10));
};


/** @param {!Array.<string>} value */
proto.services.dataAccess.proto.Post.prototype.setHashtagList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.services.dataAccess.proto.Post.prototype.addHashtag = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


proto.services.dataAccess.proto.Post.prototype.clearHashtagList = function() {
  this.setHashtagList([]);
};


/**
 * repeated string text = 11;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.services.dataAccess.proto.Post.prototype.getTextList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 11));
};


/** @param {!Array.<string>} value */
proto.services.dataAccess.proto.Post.prototype.setTextList = function(value) {
  jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.services.dataAccess.proto.Post.prototype.addText = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


proto.services.dataAccess.proto.Post.prototype.clearTextList = function() {
  this.setTextList([]);
};


/**
 * repeated string img_link = 12;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.services.dataAccess.proto.Post.prototype.getImgLinkList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 12));
};


/** @param {!Array.<string>} value */
proto.services.dataAccess.proto.Post.prototype.setImgLinkList = function(value) {
  jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.services.dataAccess.proto.Post.prototype.addImgLink = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


proto.services.dataAccess.proto.Post.prototype.clearImgLinkList = function() {
  this.setImgLinkList([]);
};


/**
 * repeated string ext_link = 13;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.services.dataAccess.proto.Post.prototype.getExtLinkList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 13));
};


/** @param {!Array.<string>} value */
proto.services.dataAccess.proto.Post.prototype.setExtLinkList = function(value) {
  jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.services.dataAccess.proto.Post.prototype.addExtLink = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


proto.services.dataAccess.proto.Post.prototype.clearExtLinkList = function() {
  this.setExtLinkList([]);
};


